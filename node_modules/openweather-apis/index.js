// weather.js - APIs for openweathermap.org
(function(){

  var config = {
    city : 'Fairplay',
    units : 'metric',
    lan : 'eng',
    format : 'json',
    APPID : null,
    group : [2088122,2092740,2087894] // added by sylvery
  };


  // main settings
  var http = require('http');
  var options = {
    host : 'api.openweathermap.org',
    path: '/data/2.5/weather?q=fairplay'
  };


  // exports(set)  --------------------------------------------  exports(set)  ---------------------------------------------
  exports.setLang = function(lang){
    config.lan = lang.toLowerCase();
  }

  exports.setCity = function(city){
    config.city = city.toLowerCase();
  }

  exports.setUnits = function(units){
    config.units = units.toLowerCase();
  }

  exports.setAPPID = function(appid){
    config.APPID = appid;
  }

// added by sylver
  exports.setGroup = function(group) {
    for (var i=0; i<group.length; i++) {
      config.group[i] = group[i]
    }
  }
// added by sylver

  // export(get)  ---------------------------------------------  exports(get)  ---------------------------------------------
  exports.getLang = function(){
    return config.lan;
  }

  exports.getCity = function(){
    return config.city;
  }

  exports.getUnits = function(){
    return config.units;
  }

  exports.getFormat = function(){
    return config.format;
  }

  exports.getError = function(callback){
     getErr(callback);
  }

  exports.getAPPID = function(){
    return config.APPID;
  }

// added by sylvery
  exports.getGroup = function() {
    return config.group;
  }
// added by sylvery

  // get Response by field (satusCode, )
  exports.getResponseCode = function(callback){
    getResponseBF('statusCode', callback);
  }

  // get temperature
  exports.getTemperature = function(callback){
    getTemp(callback);
  }

  // get the atmospheric pressure
  exports.getPressure = function(callback){
    getPres(callback);
  }

  exports.getHumidity = function(callback){
    getHum(callback);
  }

  exports.getDescription = function(callback){
    getDesc(callback);
  }

  exports.getAllWeather = function(callback){
    getData(callback);
  }

// code added by sylvery
  exports.getGroupWeather = function(callback){
    getGroupData(callback);
  }
// code added by sylvery

  exports.getSmartJSON = function(callback){
    getSmart(callback);
  }

  // active functions()  -------------------------------------  active functions()  --------------------------------------------

  function getErr(callback){
    // set new path to throw the http exception
    options.path = 'timetocrash';
    var request = http.get(options, function(err,data){
        return callback(err,data);
    })
  }

  function getPres(callback){
    getData(function(err,jsonObj){
      return callback(err,jsonObj.main.pressure);
    })
  }

  function getTemp(callback){
    getData(function(err,jsonObj){
      return callback(err,jsonObj.main.temp);
    })
  }

  function getHum(callback){
    getData(function(err,jsonObj){
      return callback(err,jsonObj.main.humidity);
    })
  }

  function getDesc(callback){
    getData(function(err,jsonObj){

      return callback(err, (jsonObj.weather)[0].description);
    })
  }

  function getSmart(callback){
    getData(function(err,jsonObj){
      var smartJSON = {};
      smartJSON.temp = jsonObj.main.temp;
      smartJSON.humidity = jsonObj.main.humidity;
      smartJSON.pressure = jsonObj.main.pressure;
      smartJSON.description = (jsonObj.weather)[0].description;
      smartJSON.weathercode = ((jsonObj.weather[0]).id);
      return callback(err,smartJSON);
    })
  }

  function getResponseBF(field,callback){
    var req = http.get(options, function(res){
      res.on('end', function(){
      });
			return callback(null, res[field]);
    });
  }

  function buildPath(){

    return '/data/2.5/weather?q=' + config.city + '&units=' + config.units + '&lang=' + config.lan + '&APPID=' + config.APPID;

  }

  function getData(callback){
    options.path = buildPath();
    var req = http.get(options, function(res){
      res.setEncoding('utf-8');
      res.on('data', function (chunk) {

          return callback(null, JSON.parse(chunk));
      });

      res.on('error', function(err){
          return callback(err, null);
      })
    });
  }

  function buildPathGroup() {
    var groupinfo = '';
    for (var i=0; i<config.group.length; i++) {
      if (i === config.group.length-1) {
        groupinfo = groupinfo + config.group[i];
      } else { groupinfo = groupinfo + config.group[i] + ','; }
    }
    return '/data/2.5/group?id=' + groupinfo + '&units=' + config.units + '&lang=' + config.lan + '&APPID=' + config.APPID;
  }

  function getGroupData(callback) {
    options.path = buildPathGroup();
    var req = http.get(options, function (res) {
      res.setEncoding('utf-8');
      res.on('data', function (chunk) {
        return callback(null, JSON.parse(chunk));
      });
      res.on('error', function (err) {
        return callback(err,null);
      });
    });
  }

// http://api.openweathermap.org/data/2.5/group?id=2088122,2092740,2087894&appid=375cc7f16728bf0dddde9ec5c3a33f0b
// http://api.openweathermap.org/data/2.5/weather?q=london,uk&appid=375cc7f16728bf0dddde9ec5c3a33f0b

})();
